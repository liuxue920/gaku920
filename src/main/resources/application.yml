server:
 port: 8088

spring:
 profiles:
  active: dev
 main:
  allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册
 datasource:
  type: com.alibaba.druid.pool.DruidDataSource
  driver-class-name: com.mysql.jdbc.Driver
  username: root
  password:  ENC(TttgdBOC0VGyIva4JtJwETnFNe2+ngqrjxstfIiG/9fv7s32QzNMN7S2S3Us2Knu)
  url: jdbc:mysql://123.57.176.149:3306/fafamc_dev?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai
  druid:
   driver-class-name: com.mysql.jdbc.Driver
   initialSize: 5
   minIdle: 5
   maxActive: 20
   maxWait: 60000
   timeBetweenEvictionRunsMillis: 60000
   minEvictableIdleTimeMillis: 300000
   validationQuery: SELECT 1 FROM DUAL
   testWhileIdle: true
   testOnBorrow: false
   testOnReturn: false
   poolPreparedStatements: true
   maxPoolPreparedStatementPerConnectionSize: 20
   useGlobalDataSourceStat: true
   connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
 rabbitmq:
  host: 123.57.176.149
  port: 5672
  username: why
  password: ENC(Gy8g4aeu8DEKfwaaFloubaF8UpMDegafK99qlgpz7KJ/Y0QVuDY2U86zjIP+BgO+)
  publisher-confirms: true
  virtual-host: /demo
 redis:
  database: 0
  host: 123.57.176.149
  port: 6379
  password: ENC(4E9sr8w5XFgFG0ziDB5CUQaT7IShca1wPoEeftrFgDKBxr1hgXItPCI64tX+8WMq)
  timeout: 1000 #连接超时时间（毫秒）
  jedis:
   pool:
    max-active: 200 #连接池最大连接数
    max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
    max-idle: 10 #连接池中的最大空闲连接
    min-idle: 1 #连接池中的最小空闲连接

 kafka:
   # 指定kafka server的地址，集群配多个，中间，逗号隔开
  bootstrap-servers: 123.57.176.149:9092
   # 生产者
  producer:
    # 写入失败时，重试次数。当leader节点失效，一个repli节点会替代成为leader节点，此时可能出现写入失败，
    # 当retris为0时，produce不会重复。retirs重发，此时repli节点完全成为leader节点，不会产生消息丢失。
   retries: 0
    # 每次批量发送消息的数量,produce积累到一定数据，一次发送
   batch-size: 16384
    # produce积累数据一次发送，缓存大小达到buffer.memory就发送数据
   buffer-memory: 33554432
    # 指定消息key和消息体的编解码方式
   key-serializer: org.apache.kafka.common.serialization.StringSerializer
   value-serializer: org.apache.kafka.common.serialization.StringSerializer
   properties:
    linger.ms: 1
   # 消费者
  consumer:
   enable-auto-commit: false
   auto-commit-interval: 100ms
   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
   value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
   properties:
    session.timeout.ms: 15000
   group-id: group

# activiti:
#  database-schema-update: true
#  #自动部署验证设置:true-开启（默认）、false-关闭
#  check-process-definitions: false
#  process-definition-location-prefix: classpath:/processes/

mybatis:
 mapper-locations: classpath:mappers/*.xml #我实在太傻逼了，这个路径写错了 classpath，不是class
# config-location: classpath:mybatis/mybatis.xml
 configuration:
  map-underscore-to-camel-case: true

## 这样配置仍然有风险，因为密钥直接共享了出去
jasypt:
 encryptor:
  password: gaku920
  algorithm: PBEWithHmacSHA512AndAES_128
  property:
   prefix: ENC(
   suffix: )

# 使fastjson生效，多个包使用逗号分隔
 fastjson:
  parser:
   autoTypeAccept: com.fafamc.redpackage.domain.
